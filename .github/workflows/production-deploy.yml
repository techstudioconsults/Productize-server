name: Production CI/CD Workflow

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: productize_test
          MYSQL_USER: test
          MYSQL_PASSWORD: 123456
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-scripts --no-progress --optimize-autoloader

      - name: Copy .env.example to .env
        run: cp .env.example .env

      - name: Generate APP_KEY
        run: php artisan key:generate

      - name: Create testing database
        run: |
          mysql -h 127.0.0.1 -u test -p123456 -e 'CREATE DATABASE IF NOT EXISTS productize_test;'

      - name: Run migrations
        run: php artisan migrate --env=testing

      - name: Run tests
        run: vendor/bin/phpunit

  build:
    if: github.event_name == 'push'
    name: Build and Deploy
    needs: test
    runs-on: [production]

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Give checkout permission
        run: sudo chmod -R 777 /var/www/productize

      - name: ðŸšš Get latest code
        uses: actions/checkout@v3

      - name: Setup Enviroment
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
        env:
          runner: self-hosted

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_PRODUCTION }}" > .env

      - name: Install Packages
        run: composer install --optimize-autoloader --no-dev

      - name: Autoload
        run: composer dump-autoload

      - name: Clear caches
        run: php artisan optimize:clear

      - name: Generate new Cache
        run: php artisan optimize

      - name: Generate storage link
        run: php artisan storage:link

      - name: Migrate Database
        run: php artisan migrate --force

      - name: Prune sanctum
        run: php artisan sanctum:prune-expired

      - name: Give permissions
        run: |
          sudo chown -R www-data.www-data /var/www/productize/_work/Productize-server/Productize-server/storage
          sudo chown -R www-data.www-data /var/www/productize/_work/Productize-server/Productize-server/bootstrap/cache
          sudo chmod -R 777 /var/www/productize/_work/Productize-server/Productize-server/storage
          sudo chmod -R 777 /var/www/productize/_work/Productize-server/Productize-server/bootstrap/cache
